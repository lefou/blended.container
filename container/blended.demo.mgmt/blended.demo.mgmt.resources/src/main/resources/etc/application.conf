include "akkahttp.conf"
include "akkaSslConfig.conf"

blended {
  activemq.defaultbroker {
    brokerName: blended
    file: "broker.amq"
    provider: "activemq"
    withSsl : true
    clientId = "node"
  }

  akka.http {
    host = "0.0.0.0"
    port = 9995
    ssl {
      host = "0.0.0.0"
      port = 9996
    }
  }

  mgmt.repo {
    repoId = "artifacts",
    baseDir = ${BLENDED_HOME}/repositories/artifacts
  }

  persistence.h2 {
    dbPath = ${BLENDED_HOME}/h2/blended.persistence.h2
    dbUserName = admin
    dbPassword = admin
    options = "AUTO_SERVER=TRUE"
  }

  security {
    simple {
      andreas { pwd: "mysecret", groups: ["admins", "blended"] }
      tobias  { pwd: "secret", groups: ["de_admins", "blended"] }
      john    { pwd: "secret", groups: ["de_admins", "bg_admins"] }
      tommy   { pwd: "secret", groups: ["admins", "de_admins", "bg_admins"] }
      itest   { pwd: "secret", groups: ["admins", "blended"] }
    }

    permissions {
      admins : [
        // rollout profiles -> modify and restart containers
        { permissionClass: "rollout" }
        // upload new profiles and overlays
        { permissionClass: "profile:update" }
        // upload into artifacts repository
        { permissionClass: "repository:upload:artifacts"}
      ]

      blended : [
        { permissionClass: "container" }
      ]

      de_admins : [
        { permissionClass: "rollout", properties { country: ["de"] } }
      ]

      bg_admins : [
        { permissionClass: "rollout", properties { country: ["bg"] } }
      ]
    }

    ssl {

      keyStore = ${blended.container.home}/etc/keystore
      storePass = "blended"
      keyPass = "mysecret"

      certificates {
        default {
          provider = "default"
          commonName = "CN=server1, O=blended, C=DE"
          logicalHostnames = ["server1"]
          minValidDays = 10
        }
        logical {
          provider = "default"
          commonName = "CN=server2, O=blended, C=DE"
          logicalHostnames = ["server2"]
          minValidDays = 10
        }
      }

      selfsigned {
        validDays=10
        keyStrength=2048
        signatureAlgorithm="SHA256withRSA"
      }

      refresher {
        minValidDays = 2
        hour = 2
        minute = 0
        onRefreshAction = restart
      }
    }
  }

  updater.remote {
    repository {
      runtimeConfigsPath = ${BLENDED_HOME}/repositories/rcs
      overlayConfigsPath = ${BLENDED_HOME}/repositories/ocs
    }
  }
}

FixedPool {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 32
  }
  throughput = 1
}

akka {

  loggers =  ["akka.event.slf4j.Slf4jLogger"]
  loglevel = debug

  log-config-on-start = on

  actor { #akka.actor
    debug {
      receive = on
      lifecycle = on
    }
  } #actor


  stream { #akka.stream

    materializer { #akka.stream.materializer
      initial-input-buffer-size = 4
      max-input-buffer-size = 16
      dispatcher = ""
      subscription-timeout {
        mode = cancel
        timeout = 5s
      }
      debug-logging = off
      output-burst-limit = 1000
      auto-fusing = on
      max-fixed-buffer-size = 1000000000
      sync-processing-limit = 1000
      debug {
        fuzzing-mode = off
      }
      io.tcp {
        write-buffer-size = 16 KiB
      }
    } #akka.stream.materializer

    blocking-io-dispatcher = "akka.stream.default-blocking-io-dispatcher"

    default-blocking-io-dispatcher { #akka.stream.default-blocking-io-dispatcher
      type = "Dispatcher"
      executor = "thread-pool-executor"
      throughput = 1
      thread-pool-executor {
        fixed-pool-size = 16
      }
    } #akka.stream.default-blocking-io-dispatcher
  } #akka.stream


  ssl-config { #akka.ssl-config
    protocol = "TLSv1.2"
  } #akka.ssl-config

} #akka


